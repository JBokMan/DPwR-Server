plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'pmd'

    // jextract Plugin
    id 'io.github.krakowski.jextract' version '0.2.6'
    // shadowJar Plugin
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

pmd {
    consoleOutput = true
    toolVersion = "6.9.0"
    rulesMinimumPriority = 5
    ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml", "category/java/codestyle.xml"]
}

application {
    mainClass = 'main/Application'
}

project.startScripts.with {
    doLast {
        // The HotSpot VM uses the SIGSEGV signal for its own purposes,
        // which may interfere with signal handlers installed by the ucx library.
        // Therefore, we turn off signal handlers with this (ugly) hack.
        unixScript.text = unixScript.text.replaceFirst('exec ', 'UCX_ERROR_SIGNALS="" exec ')
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(19))
    }
}

group 'org.jb'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "de.hhu.bsinfo:core"
    implementation "de.hhu.bsinfo:common"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // https://mvnrepository.com/artifact/org.apache.arrow/arrow-plasma
    implementation group: 'org.apache.arrow', name: 'arrow-plasma', version: '6.0.1'

    // Log4j Logger
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'

    // CLI
    implementation 'info.picocli:picocli:4.6.3'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.3'
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

test {
    environment "UCX_ERROR_SIGNALS", ""
    environment "LD_LIBRARY_PATH", "<Path to libstdc++.so>"
    useJUnitPlatform()
}